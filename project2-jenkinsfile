pipeline {

  agent any

  environment {
    DOCKERHUB_CREDS=credentials('docker-creds')
  }

  options {
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10')
    timeout(time: 180, unit: 'SECONDS')
    timestamps()
    disableConcurrentBuilds()
  }

  stages {
    stage ('Checkout Source Code') {
      steps {
        git 'https://github.com/cliffordanup/website.git'
      }
    }

    stage ('Build Docker Image') {
      steps {
        sh '''
        docker image build -t cliffordanup/intellipaat-project2:${BUILD_NUMBER}.$(git log -1 --format=%h) -f project2/Dockerfile --build-arg GIT_COMMIT_ID=$(git log -1 --format=%h) --build-arg JENKINS_BUILD_NUMBER=${BUILD_NUMBER} .
        '''
      }
    }

    stage ('Push Docker Image to Docker Registry') {
      steps {
        sh '''
        echo $DOCKERHUB_CREDS_PSW | docker login -u $DOCKERHUB_CREDS_USR --password-stdin
        docker image push cliffordanup/intellipaat-project2:${BUILD_NUMBER}.$(git log -1 --format=%h)
        '''
      }
    }

    stage ('Deploy App for Testing') {
      steps {
        sh '''
        set +e
        kubectl apply -f project2/project2-test-deployment.yml
        set -e
        '''
      }
    }

    stage ('Test Application in Test Server') {
      steps {
        sh '''
        java -jar project2/intellipaat-project2-testing-test.jar
        '''
      }
    }

    stage ('Deploy App to Produdction') {
      steps {
        sh '''
        set +e
        kubectl apply -f project2/project2-prod-deployment.yml
        set -e
        '''
      }
    }

    stage ('Test Application in Prod Server') {
      steps {
        sh '''
        java -jar project2/intellipaat-project2-testing-prod.jar
        '''
      }
    }
  }

}
